diff --git a/api-types/api-updater.js b/api-types/api-updater.js
index 07a166114c41a789139058a6fbbe87689bb9c240..d369ca2342123342fdfc201a6cd235cb03426c50 100644
--- a/api-types/api-updater.js
+++ b/api-types/api-updater.js
@@ -1,6 +1,6 @@
 import { pathToImportPath, toValidVariable } from '../utils/string.js';
 import fs from 'fs';
-import { resolve } from 'path';
+import { resolve, relative } from 'path';
 import { debugging } from '../internal.js';
 const cwd = process.cwd();
 /** Is run when file changes has been detected */
@@ -10,6 +10,9 @@ routesDirectory) {
     let apiTypes = {};
     let importStatements = '';
     debugging && console.time(`[DEBUG] Updated generated types at ${routesDirectory} ...`);
+    const { tempOutput, outputDir = 'src' } = config;
+    const resolution = tempOutput ?
+        resolve(cwd, tempOutput) : resolve(cwd, '.svelte-kit', 'types', outputDir, 'sveltekit-zero-api.d.ts');
     function recursiveLoad(dir, directory) {
         const files = fs.readdirSync(dir);
         // ex. src/routes/(app)/api/somedir/index.ts
@@ -24,7 +27,8 @@ routesDirectory) {
             }
             if (!/\+server.(ts|js)/gm.test(fileName))
                 continue;
-            const importName = pathToImportPath(path);
+			const _relative = relative(resolution, path).replace('..','.');
+			const importName = pathToImportPath(_relative);
             const name = toValidVariable(importName);
             importStatements += `import * as ${name} from "${importName}";\n`;
             const key = fileName.replace(/\.(ts|js)$/g, '');
@@ -55,9 +59,6 @@ routesDirectory) {
         // TODO: Allow ex. [slug].[second] to become slug$second$: (slug: S, second: S) =>
         .replaceAll(/\"\[(.*?)\]\"\:/g, '$1$: ($1: S) =>')
         .replaceAll(/=\w+(?=:|\$)/g, '');
-    const { tempOutput, outputDir = 'src' } = config;
-    const resolution = tempOutput ?
-        resolve(cwd, tempOutput) : resolve(cwd, '.svelte-kit', 'types', outputDir, 'sveltekit-zero-api.d.ts');
     const folder = resolve(resolution, '..');
     if (!fs.existsSync(folder))
         fs.mkdirSync(folder, { recursive: true });